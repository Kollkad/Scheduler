"""
backend/app/common/modules/data_import.py

–ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.

–†–µ–∞–ª–∏–∑—É–µ—Ç –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:
- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–≤–∏–∂–∫–∞–º–∏
- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ openpyxl —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
- –†–µ–º–æ–Ω—Ç XML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞
- –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ fallback –º–µ—Ç–æ–¥—ã
"""

import pandas as pd
from openpyxl import load_workbook
from openpyxl.utils.exceptions import InvalidFileException
import warnings
import os
import tempfile
import zipfile
import shutil


def load_excel_data(filepath):
    """
    –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.

    Args:
        filepath (str): –ü—É—Ç—å –∫ Excel —Ñ–∞–π–ª—É

    Returns:
        pd.DataFrame: –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

    Raises:
        ValueError: –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
    """
    # –ú–µ—Ç–æ–¥ 0: –ü–æ–ø—ã—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    try:
        print("üîß –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É...")
        return pd.read_excel(filepath, header=None)
    except Exception as e:
        print(f"‚ö†Ô∏è –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
        print("üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã...")

    # –ú–µ—Ç–æ–¥ 1: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–≤–∏–∂–∫–∞–º–∏
    for engine in ['openpyxl', 'xlrd']:
        try:
            print(f"üîß –ü—Ä–æ–±—É–µ–º –¥–≤–∏–∂–æ–∫: {engine}")
            return pd.read_excel(filepath, header=None, engine=engine)
        except Exception as e:
            print(f"‚ùå –î–≤–∏–∂–æ–∫ {engine} –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            continue

    # –ú–µ—Ç–æ–¥ 2: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ openpyxl —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    try:
        print("üîß –ü—Ä–æ–±—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª —á–µ—Ä–µ–∑ openpyxl...")
        with warnings.catch_warnings():
            warnings.simplefilter("ignore")
            # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ —á—Ç–µ–Ω–∏—è
            for read_only in [True, False]:
                try:
                    wb = load_workbook(
                        filepath,
                        data_only=True,
                        read_only=read_only,
                        keep_links=False  # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
                    )
                    sheet = wb.active
                    data = []
                    max_rows = 10000  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤
                    row_count = 0

                    # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º –ª–∏—Å—Ç–∞
                    for row in sheet.iter_rows(values_only=True):
                        data.append(row)
                        row_count += 1
                        if row_count >= max_rows:
                            break

                    df = pd.DataFrame(data)
                    print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ä–µ–∂–∏–º–µ read_only={read_only}, —Å—Ç—Ä–æ–∫: {len(df)}")
                    return df
                except Exception as e:
                    print(f"‚ùå –†–µ–∂–∏–º read_only={read_only} –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
                    continue
    except Exception as e:
        print(f"‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ openpyxl –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")

    # –ú–µ—Ç–æ–¥ 3: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ XML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞
    try:
        print("üîß –ü—Ä–æ–±—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å XML —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
        return repair_excel_xml(filepath)
    except Exception as e:
        print(f"‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ XML –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")

    # –ú–µ—Ç–æ–¥ 4: –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ
    try:
        print("üîß –ü—Ä–æ–±—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É...")
        return load_excel_data_simple_fallback(filepath)
    except Exception as e:
        print(f"‚ùå –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")

    raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª {filepath}. –§–∞–π–ª —Å–∏–ª—å–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω.")


def repair_excel_xml(filepath):
    """
    –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–π XML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Excel —Ñ–∞–π–ª–∞.

    Args:
        filepath (str): –ü—É—Ç—å –∫ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É

    Returns:
        pd.DataFrame: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

    Raises:
        Exception: –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    """
    temp_dir = tempfile.mkdtemp()

    try:
        # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Excel –∫–∞–∫ ZIP –∞—Ä—Ö–∏–≤–∞
        with zipfile.ZipFile(filepath, 'r') as zip_ref:
            zip_ref.extractall(temp_dir)

        # –ü–æ–∏—Å–∫ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö XML —Ñ–∞–π–ª–æ–≤
        for root, dirs, files in os.walk(temp_dir):
            for file in files:
                if file.endswith('.xml') or file.endswith('.rels'):
                    file_path = os.path.join(root, file)
                    try:
                        repair_xml_file(file_path)
                    except Exception as e:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {file}: {e}")
                        # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
                        try:
                            with open(file_path, 'w', encoding='utf-8') as f:
                                f.write('<?xml version="1.0" encoding="UTF-8" standalone="yes"?><root></root>')
                        except:
                            pass

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        repaired_path = os.path.join(temp_dir, "repaired.xlsx")
        with zipfile.ZipFile(repaired_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(temp_dir):
                for file in files:
                    if file != "repaired.xlsx":
                        file_path = os.path.join(root, file)
                        arcname = os.path.relpath(file_path, temp_dir)
                        zipf.write(file_path, arcname)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        df = pd.read_excel(repaired_path, header=None, engine='openpyxl')
        print("‚úÖ –§–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ XML repair")
        return df

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ XML: {e}")
        raise
    finally:
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        try:
            shutil.rmtree(temp_dir, ignore_errors=True)
        except:
            pass


def repair_xml_file(file_path):
    """
    –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π XML —Ñ–∞–π–ª –ø—É—Ç–µ–º –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤.

    Args:
        file_path (str): –ü—É—Ç—å –∫ XML —Ñ–∞–π–ª—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    """
    try:
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()

        # –û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        lines = content.split('\n')
        cleaned_lines = []

        for line in lines:
            # –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤
            words = line.split()
            seen_attrs = set()
            cleaned_words = []

            for word in words:
                if '=' in word and word not in seen_attrs:
                    seen_attrs.add(word)
                    cleaned_words.append(word)
                else:
                    cleaned_words.append(word)

            cleaned_line = ' '.join(cleaned_words)
            cleaned_lines.append(cleaned_line)

        cleaned_content = '\n'.join(cleaned_lines)

        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(cleaned_content)

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–∞–ª–∏–¥–Ω–æ–≥–æ XML
        try:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write('<?xml version="1.0" encoding="UTF-8" standalone="yes"?><root></root>')
        except:
            pass


def load_excel_data_simple_fallback(filepath):
    """
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —Å–∏–ª—å–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.

    Args:
        filepath (str): –ü—É—Ç—å –∫ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É

    Returns:
        pd.DataFrame: –ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ DataFrame —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ

    Raises:
        ValueError: –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–∂–µ –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
    """
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫
        for nrows in [1000, 500, 100, 50]:
            try:
                df = pd.read_excel(filepath, header=None, nrows=nrows, engine='openpyxl')
                if len(df) > 0:
                    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {nrows})")
                    return df
            except Exception as e:
                print(f"‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ {nrows} —Å—Ç—Ä–æ–∫ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
                continue
    except Exception as e:
        print(f"‚ùå –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Å—Ç—Ä–æ–∫ –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")

    # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ DataFrame —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
    try:
        print("‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π DataFrame —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ")
        return pd.DataFrame([["–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω", "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"]])
    except:
        raise ValueError("–§–∞–π–ª –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–∂–µ –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ")